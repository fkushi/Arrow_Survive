#pragma once

#include "vector.h"

namespace t2k {

	//=============================================================================================
	// name... getSidesPointAndPlane
	// work... 指定座標が平面の表裏どちらに存在するか判定する
	// arg1... 指定座標
	// arg2... 平面の法線
	// arg3... 平面上に存在するどこかの座標
	// ret.... 表...1 	裏...-1		平面上...0
	// tips... none
	//=============================================================================================
	int getSidesPointAndPlane(const Vector3& v, const Vector3& pn, const Vector3& pv);

	//=============================================================================================
	// name... getRegionPointAndRect
	// work... 矩形の中心から２本の対角線を引いた時
	//         指定した座標が対角線から上下左右どこに存在するか取得する
	// arg1... 指定座標
	// arg2... 矩形の中心座標
	// arg3... 矩形の幅
	// arg4... 矩形の高さ
	// ret... [上 0] [右 1] [下 2] [左 3]
	//=============================================================================================
	int getRegionPointAndRect(const Vector3& p, const Vector3& rp, const int rect_w, const int rect_h);

	//=============================================================================================
	// name... getNearestRectPoint
	// work... 点と矩形の矩形内に存在する点への最近接点を取得
	// arg1... 矩形座標
	// arg2... 矩形の幅
	// arg3... 矩形の高さ
	// arg4... 点座標
	// ret... [上 0] [右 1] [下 2] [左 3]
	//=============================================================================================
	t2k::Vector3 getNearestRectPoint(const t2k::Vector3& rect_pos, float w, float h, const t2k::Vector3 &point);

}